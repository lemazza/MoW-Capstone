<!DOCTYPE html>
<html lang="en">
<head>
  <title>MoW Hunter Maker</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="Create a Character for the roleplaying game Monster of the Week">
  <meta name="keywords" content="Monster of the Week, MoW, Monster, RPG, Apocolypse World">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="/js/jquery.serializejson.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/normalize/4.1.1/normalize.css" rel="stylesheet">
  <link rel="stylesheet" href="main.css">
</head>
<body>
  <header>
    <h1>Monster of the Week Character Creator</h1>
  </header>

  <main>
    <h2>Character Creator</h2>
    <form>

      <fieldset>
        <legend>Choose a Name and Class</legend>
        <label>Character Name:<input type="text" name="charName"></label><br>
        <label>Choose Image: <input type="text" placeholder="paste an image url" name="characterImage"></label><br>
        <label>Class:</label><br>
          <% 
            for(let i = 0; i < Object.keys(data).length; i++) {
              let key = Object.keys(data)[i]
          %>

            <label>
              <input value="<%= key %>" type="radio" name="classType">
              <%= data[key].class %>
            </label>

          <%}%>
      </fieldset>

      <fieldset>
        <legend>Luck</legend>
          <label>You can mark off a Luck box to either change a roll you just made to a 12, as if you had rolled that; or change a wound you have just taken to
            count as 0-harm, no matter how bad it was. If all your Luck boxes get filled, you’ve run out of good luck.<br>
            <input type="number" name="luck" value="0" min="0" max="7" step="1">
          </label>
      </fieldset>

      <fieldset>
        <legend>Harm</legend>
          <label>When you suffer harm, mark off the number of boxes equal to harm
          suffered. When you reach four harm, tick “Unstable.”<br>
            <input type="number" name="harm[number]" value="0" min="0" max="7" step="1">
          </label><br>
          <label>Unstable
            <input type="checkbox" name="harm[unstable]" value="true"><br>
            (Unstable injuries will worsen as time passes)
          </label>
      </fieldset>
      </fieldset>


      <fieldset>
        <legend>Leveling Up</legend>
          <label>Whenever you roll and get a total of 6 or less, or when a move tells you to, mark an experience box.<br>
          When you have filled all five experience boxes, you level up. Erase
          the marks and pick an improvement<br>
            <input type="number" name="experience" value="0" min="0" max="5" step="1">
          </label>
      </fieldset>



 <% /** LOOP THROUGH CLASSES TO MAKE FIELDSETS FOR EACH MODULE **/ %>
        
      <%
        const ignoreKeys = ['class', 'flavorText', 'options', 'name', 'description'];
        Object.keys(data).forEach(function(className) {

          %> <div id="<%=className%>Form" class="classFields" hidden> <% 

          let charClass = data[className];
          Object.keys(charClass).forEach(function(classKey) {
            /* find a named key to explore as a module with options */
            
            if ( !ignoreKeys.includes(classKey)) {
            
            /* test the type of the value */
              let classVal = charClass[classKey];
              
              let templateData = {
                  className: className,
                  module: classKey,
                  objectData: character ? character[classKey] : {}
              }
              switch(typeof(classVal)){
                  case 'string':
                      // name and value should be put to the page
                      break;
                  case 'object':
                      if( Array.isArray(classVal) ){
                          // is an array
                          // but we have no pattern for this in our data design
                      } else {
                          //is an object. should have type and label keys, and options
                          if( classVal._label ){
                              templateData.label = classVal._label;
                          }
                          if( classVal._type ){
                              templateData.type = classVal._type;
                          }
                          if( classVal.options ){
                              templateData.options = classVal.options;
                          }
                          if( classVal._description ){
                              templateData.description = classVal._description;
                          }
                          
                      }
              }
              let templateLocation = 'forms/fieldsets/' + templateData.module +".ejs";
            
            
    
         %> <%-fileExists( __dirname +"/views/" +templateLocation) &&
             include (templateLocation, {templateData: templateData}) 
            %> <%
          };
        });
          %> </div> <%   
    }); %>

<!--
      <fieldset>
        <legend>Choose your Look</legend>
        <div id="look"></div>
      </fieldset>


      <fieldset>
        <legend>Choose your Ratings</legend>
        <div id="ratings"></div>
      </fieldset>


      <fieldset>
        <legend>Choose your Moves</legend>
        <div id="moves"></div>
      </fieldset>


      <div id="other">
      </div>


      <fieldset>
        <legend>Choose your Gear</legend>
        <div id="gear"></div>
      </fieldset>


      <fieldset>
        <legend>History</legend>
        <div id="history"></div>
      </fieldset>


      


      

      <fieldset>
        <legend>Improvements</legend>
        <div id="improvements"></div>
      </fieldset>


      <fieldset>
        <legend>Advanced Improvements</legend>
        <div id="adv-improvements"></div>
      </fieldset>

      <button type="submit">Submit</button>
    </form>  


  -->
    <button type="submit">Submit</button>
  </form>

  </main>
  <script type="text/javascript" src="/common.js"></script>
  <script type="text/javascript" src="/char-creator-submit.js"></script>
</body>
</html>
